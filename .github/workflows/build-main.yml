jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      env:
        cache-name: cache-node-modules
      name: Cache node modules
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json')
          }}
        path: ~/.npm
        restore-keys: '${{ runner.os }}-build-${{ env.cache-name }}-

          '
    - continue-on-error: true
      name: Build with Maven
      run: 'mvn -B verify -P coverage --no-transfer-progress -D maven.javadoc.skip=true

        '
    - continue-on-error: true
      uses: codecov/codecov-action@v4
      with:
        files: '''*/jacoco.xml'''
    strategy:
      matrix:
        os:
        - ubuntu-latest
  publish-snapshot:
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      env:
        cache-name: cache-node-modules
      name: Cache node modules
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json')
          }}
        path: ~/.npm
        restore-keys: '${{ runner.os }}-build-${{ env.cache-name }}-

          ${{ runner.os }}-build-

          ${{ runner.os }}-

          '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish SNAPSHOT version to GitHub Packages (we can skip tests, since
        we only deploy, if the build workflow succeeded)
      run: mvn -B --no-transfer-progress deploy -DskipTests
    - continue-on-error: true
      id: project
      name: Extract Maven project version for Asciidoc GitHub Pages directory naming
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}'
        --non-recursive exec:exec)
    - continue-on-error: true
      name: Show extracted Maven project version
      run: echo ${{ steps.project.outputs.version }}
    - continue-on-error: true
      name: Deploy Asciidoc docs output to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4.6.1
      with:
        branch: gh-pages
        clean: true
        folder: spring-boot-admin-docs/target/generated-docs
        target-folder: ${{ steps.project.outputs.version }}
name: build main
on:
  repository_dispatch:
    types: trigger-ga___build-main.yml
